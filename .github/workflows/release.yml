name: Release

on:
  workflow_dispatch:

# NOTE: For Linux builds, we can only build with Ubuntu. It should be the oldest base system we intend to support. See PR-759 & https://tauri.app/v1/guides/building/linux for reference.

jobs:
  desktop-main:
    strategy:
      fail-fast: true
      matrix:
        settings:
          - host: windows-latest
            target: x86_64-pc-windows-msvc
            bundles: msi
          # - host: windows-latest
          #   target: aarch64-pc-windows-msvc
          # - host: ubuntu-20.04
          #   target: x86_64-unknown-linux-musl
          # - host: ubuntu-20.04
          #   target: aarch64-unknown-linux-gnu
          # - host: ubuntu-20.04
          #   target: aarch64-unknown-linux-musl
          # - host: ubuntu-20.04
          #   target: armv7-unknown-linux-gnueabihf
    name: Desktop - Main ${{ matrix.settings.target }}
    runs-on: ${{ matrix.settings.host }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Apple API key
        if: ${{ runner.os == 'macOS' }}
        run: |
          mkdir -p ~/.appstoreconnect/private_keys/
          cd ~/.appstoreconnect/private_keys/
          echo ${{ secrets.APPLE_API_KEY_BASE64 }} >> AuthKey_${{ secrets.APPLE_API_KEY }}.p8.base64
          base64 --decode AuthKey_${{ secrets.APPLE_API_KEY }}.p8.base64 -o AuthKey_${{ secrets.APPLE_API_KEY }}.p8
          rm AuthKey_${{ secrets.APPLE_API_KEY }}.p8.base64

      - name: Install Codesigning Certificate
        if: ${{ runner.os == 'macOS' }}
        uses: apple-actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.APPLE_CERTIFICATE }}
          p12-password: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}

      - name: Setup Node.js, pnpm and dependencies
        uses: ./.github/actions/setup-pnpm
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup System and Rust
        uses: ./.github/actions/setup-system
        env:
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          targets: ${{ matrix.settings.target }}

      - name: Build
        run: |
          pnpm desktop build --ci -v --target ${{ matrix.settings.target }} --bundles ${{ matrix.settings.bundles }},updater
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          ENABLE_CODE_SIGNING: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ secrets.APPLE_SIGNING_IDENTITY }}
          APPLE_PROVIDER_SHORT_NAME: ${{ secrets.APPLE_PROVIDER_SHORT_NAME }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}

      - name: Publish Artifacts
        uses: ./.github/actions/publish-artifacts
        with:
          target: ${{ matrix.settings.target }}
          profile: release
